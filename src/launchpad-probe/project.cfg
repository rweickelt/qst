var Boot = xdc.useModule('ti.sysbios.family.arm.cc26xx.Boot');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');
Clock.tickPeriod = 10;

var Defaults = xdc.useModule('xdc.runtime.Defaults');
Defaults.common$.namedModule = false;

var Error = xdc.useModule('xdc.runtime.Error');
Error.policyFxn = Error.policySpin;
Error.raiseHook = null;
Error.maxDepth = 2;

var halHwi = xdc.useModule('ti.sysbios.hal.Hwi');
halHwi.checkStackFlag = true;
var m3Hwi = xdc.useModule('ti.sysbios.family.arm.m3.Hwi');
m3Hwi.enableException = true;
m3Hwi.nvicCCR.DIV_0_TRP = 0;
m3Hwi.nvicCCR.UNALIGN_TRP = 1;

var Idle = xdc.useModule('ti.sysbios.knl.Idle');
Idle.addFunc('&Power_idleFunc');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
BIOS.assertsEnabled = false;
BIOS.includeXdcRuntime = true;

BIOS.libType = BIOS.LibType_Custom;
BIOS.runtimeCreatesEnabled = true;
BIOS.logsEnabled = false;

var Memory = xdc.useModule('xdc.runtime.Memory');
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');
HeapMem.primaryHeapBaseAddr = "&__primary_heap_start__";
HeapMem.primaryHeapEndAddr = "&__primary_heap_end__";

var GateSwi = xdc.useModule('ti.sysbios.gates.GateSwi');
HeapMem.common$.gate = GateSwi.create();

var heapMemParams = new HeapMem.Params();
heapMemParams.usePrimaryHeap = true;
Program.global.heap0 = HeapMem.create(heapMemParams);
Memory.defaultHeapInstance = Program.global.heap0;

Program.stack = 0;

//var ROM = xdc.useModule('ti.sysbios.rom.ROM');
//ROM.romName = ROM.CC1350;

var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
Semaphore.supportsPriority = false;
Semaphore.supportsEvents = true;
var Event = xdc.useModule('ti.sysbios.knl.Event');
var Swi = xdc.useModule('ti.sysbios.knl.Swi');
Swi.numPriorities = 6;

var System = xdc.useModule('xdc.runtime.System');
System.abortFxn = System.abortSpin;
System.extendedFormats = '%f%$S';
System.exitFxn = System.exitSpin;
System.maxAtexitHandlers = 2;

var SysCallback = xdc.useModule('xdc.runtime.SysCallback');
System.SupportProxy = SysCallback;

var Task = xdc.useModule('ti.sysbios.knl.Task');
Task.checkStackFlag = false;
Task.defaultStackSize = 512;
Task.enableIdleTask = true;
Task.idleTaskStackSize = 512;
Task.numPriorities = 6;

var Text = xdc.useModule('xdc.runtime.Text');
Text.isLoaded = false;

var Types = xdc.useModule('xdc.runtime.Types');
var Main = xdc.useModule('xdc.runtime.Main');
var Settings = xdc.useModule('ti.sysbios.posix.Settings');
var Event = xdc.useModule('ti.sysbios.knl.Event');
var Mailbox = xdc.useModule('ti.sysbios.knl.Mailbox');

// GateSwi is necessary for the heap module to be used in Swi's
var GateSwi = xdc.useModule('ti.sysbios.gates.GateSwi');

// Application objects
var task0Params = new Task.Params();
task0Params.instance.name = "mainTask";
task0Params.stackSize = 1024;
Program.global.mainTask = Task.create("&mainTaskFunction", task0Params);

var event0Params = new Event.Params();
event0Params.instance.name = "applicationEvent";
Program.global.applicationEvent = Event.create(event0Params);

var mailbox0Params = new Mailbox.Params();
mailbox0Params.instance.name = "rxMailbox";
mailbox0Params.readerEvent = Program.global.applicationEvent;
mailbox0Params.readerEventId = 1;
Program.global.rxMailbox = Mailbox.create(4, 4, mailbox0Params);

var clock0Params = new Clock.Params();
clock0Params.instance.name = "watchdogClock";
clock0Params.period = 517000 / Clock.tickPeriod;
Program.global.watchdogClock = Clock.create("&watchdogClockCallback", 0, clock0Params);

