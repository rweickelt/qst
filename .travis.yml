language: cpp

env:
  global:
    # Needed by AWS
    - PATH=$HOME/.local/bin:$PATH
    - QST_VERSION=$(if [[ "$TRAVIS_TAG" ]]; then echo -n ${TRAVIS_TAG:1} ; else echo -n ${TRAVIS_COMMIT::8} ; fi)
    - QT_VERSION=qst-qt-5.14

stages:
  - name: build
  - name: bundle and deploy

# Load eventual build artifacts
before_install:
  - pip install --user awscli
  - mkdir -p ~/$TRAVIS_BUILD_NUMBER
  - aws s3 sync s3://qst-build-artifacts/$TRAVIS_BUILD_NUMBER ~/$TRAVIS_BUILD_NUMBER

after_success:
  - aws s3 sync ~/$TRAVIS_BUILD_NUMBER s3://qst-build-artifacts/$TRAVIS_BUILD_NUMBER

jobs:
  include:
    # Qst application for Linux
    - stage: build
      sudo: required
      services:
        - docker
      addons:
        apt:
          packages:
            - docker-ce
      env:
        - TARGET=qst
        - PLATFORM=linux
        - QBS_PROFILE=qt5
        - QBS_OPTIONS="project.runAutotest:true project.version:$QST_VERSION"
      script:
        - docker-compose run --rm linux qbs install
              --build-directory build-${PLATFORM}
              --install-root qst
              release
              profile:$QBS_PROFILE
              $QBS_OPTIONS
        - tar -cjf ~/$TRAVIS_BUILD_NUMBER/$TARGET-$PLATFORM.tar.bz2 qst
        - find qst/
    # Qst application for Windows
    - stage: build
      sudo: required
      services:
        - docker
      addons:
        apt:
          packages:
            - docker-ce
      env:
        - TARGET=qst
        - PLATFORM=mingw-w64
        - QBS_PROFILE=qt5
        - QBS_OPTIONS="project.version:$QST_VERSION"
      script:
        - docker-compose run --rm mingw qbs install
              --build-directory build-${PLATFORM}
              --install-root qst
              release
              profile:$QBS_PROFILE
              $QBS_OPTIONS
        - tar -cjf ~/$TRAVIS_BUILD_NUMBER/$TARGET-$PLATFORM.tar.bz2 qst
        - find qst/
    # Launchpad probe for CC13x0
    - stage: build
      sudo: required
      services:
        - docker
      addons:
        apt:
          packages:
            - docker-ce
      env:
        - TARGET=launchpad-probe
        - PLATFORM=cc13x0
        - PROFILE=simplelink_cc13x0
        - QBS_OPTIONS="project.version:$QST_VERSION"
      script:
        - docker-compose build simplelink
        - docker-compose run --rm simplelink qbs install
              --build-directory build-${PLATFORM}
              --install-root qst
              release
              profile:$PROFILE
              $QBS_OPTIONS
        - tar -cjf ~/$TRAVIS_BUILD_NUMBER/$TARGET-$PLATFORM.tar.bz2 qst
        - find qst/
    # Deploy linux bundle
    - stage: bundle and deploy
      sudo: false
      env:
        - TARGET="linux-x86_64 bundle"
        - FILE=qst-linux-x86_64-$QST_VERSION.tar.bz2
      script:
        - tar -xjf ~/$TRAVIS_BUILD_NUMBER/qst-linux-x86_64.tar.bz2
        - tar -xjf ~/$TRAVIS_BUILD_NUMBER/launchpad-probe-cc13x0.tar.bz2
        - tar -jcf $TRAVIS_BUILD_DIR/$FILE qst
      deploy:
        - provider: script
          skip_cleanup: true
          script: curl -T $TRAVIS_BUILD_DIR/$FILE --ftp-create-dirs --ftp-ssl --user $FTP_USER:$FTP_PASSWORD ftp://$FTP_HOST/$QST_VERSION/
          on:
            tags: true
        - provider: script
          skip_cleanup: true
          script: curl -F'file=@$TRAVIS_BUILD_DIR/$FILE' https://0x0.st
          on:
            condition: $TRAVIS_TAG = ""
            all_branches: true
    # Deploy windows bundle
    - stage: bundle and deploy
      sudo: false
      env:
        - TARGET="windows-x86_64 bundle"
        - FILE=qst-windows-x86_64-$QST_VERSION.zip
      script:
        - tar -xjf ~/$TRAVIS_BUILD_NUMBER/qst-mingw-w64.tar.bz2
        - tar -xjf ~/$TRAVIS_BUILD_NUMBER/launchpad-probe-cc13x0.tar.bz2
        - zip -r $TRAVIS_BUILD_DIR/$FILE qst
      deploy:
        - provider: script
          skip_cleanup: true
          script: curl -T $TRAVIS_BUILD_DIR/$FILE --ftp-create-dirs --ftp-ssl --user $FTP_USER:$FTP_PASSWORD ftp://$FTP_HOST/$QST_VERSION/
          on:
            tags: true
        - provider: script
          skip_cleanup: true
          script: curl -F'file=@$TRAVIS_BUILD_DIR/$FILE' https://0x0.st
          on:
            condition: $TRAVIS_TAG = ""
            all_branches: true
    # Deploy sources on release
    - stage: bundle and deploy
      if: tag IS present
      sudo: false
      env:
        - TARGET="sources"
        - FILE=qst-src-$QST_VERSION.tar.bz2
      script:
        - git archive $TRAVIS_BRANCH | bzip2 > $TRAVIS_BUILD_DIR/$FILE
      deploy:
        - provider: script
          skip_cleanup: true
          script: curl -T $TRAVIS_BUILD_DIR/$FILE --ftp-create-dirs --ftp-ssl --user $FTP_USER:$FTP_PASSWORD ftp://$FTP_HOST/$QST_VERSION/
          on:
            tags: true
